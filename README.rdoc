==Welcome to GetSome-Lunch!

Use this app to structure food orders across an entire company to easily meet restaurant delivery minimums.

------------------------------------------------------------------------------------------
Why this app?

Say it's lunch time, and you as an employee want food delivered from a restaurant. Most restaurants, however, require minimum order amounts before they'll deliver. To raise the minimum amount, you'll need to approach others in the firm, knock on office doors, send out emails, etc, to get everyone in the loop.
This is repetitive, disruptive, and you won't be able to get everyone in on the action! You need an efficient way to organize the order.

Enter GetSome-Lunch.
Employees across an entire company can use this app to easily, efficiently organize restaurant orders, reach delivery minimums, and make sure everyone in the firm can know about a food opportunity.

------------------------------------------------------------------------------------------
This is a Rails 5 app optimized for a better user experience.

We've implemented:
- Rails 5 Action Cable to enable real-time WebSocket communication for chats and order updates.
- A Postgres database schema and configured models and associations to fully reflect the dynamic between normal users, orders, order admins, items, etc.
- A real-time countdown for orders and validations that lock the order once the countdown expires
- Extensive ActionMailer features for user authentication and order notification
- Authentication with bcrypt and validations to join organizations based on email domain name
- extensive jQuery and AJAX for a responsive user experience
- CRUD actions on all models, improving the user's customization options
- RSpec tests to ensure the functionality of select models and controllers
- CSS, Bootstrap, and theme


------------------------------------------------------------------------------------------

To use this app, fork it and run rake db:create and rake db:migrate. To see it pre-populated as if for an active user, run rake db:seed and sign in as one of our seed users. Use the username: appleseed  password: password.

Quick tour:

You'll notice that Appleseed is part of two organization: Chase and Flatiron. How did he get in? When he signed up, he entered a chase and flatiron email (i.e. ending in the @chase.com and @flatironschool.com email domains). He was automatically associated to the correct organization once he authenticated his email via Action Mailer.

Now Appleseed can choose which groups within his organizations he wants to join. In this case, he works at Chase's office at 115Fifth, and so he's joined that group.
If no group fits his needs, he can create a new one, and all other users in his organization can join.

On his order index page, Appleseed can see a list of active orders for all his groups within his active organization and filter them based on the group whose orders he wants to look at. Each order will be listed with its basic information.
On the side, he can also see past orders he's joined, ones he created, and ones he's part of right now that are still active.

Appleseed sees a bunch of orders that are active for his Flatiron New York group, none of which he's joined. He can check out an order by clicking on it.

When he clicks, he goes to the order show page and sees an active countdown until the order expires (i.e. the order admin will place the order). Because of the Rails 5 ActionCable, he'll see items being added to the order in real time and have access to real time chat functionality. He'll also see the order's total amount and how far there is to go to in order reach the order's minimum delivery amount.

To join the order, Appleseed can simply add an item and watch the order total increase! Similarly, once he's joined, he can delete his item and see the order total adjust in real time.

Once the order has expired, the order admin will see a button appear. Once clicked, all the users in the order, including Appleseed will receive an email with information on how to pay the order back for their item.

Another button will now appear for the order admin. He/she will press it once the food arrives. Once pressed, all the users in the order, again including Appleseed, will receive an email notification that the order arrived and it can be picked up from such and such person.

You've Got Some Lunch!


This is the quick tour, as mentioned. Appleseed can do several more things including, of course, creating his own orders and becoming an admin for those. Run the app to explore!
